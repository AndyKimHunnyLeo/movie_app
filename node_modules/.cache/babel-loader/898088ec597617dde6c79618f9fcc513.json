{"ast":null,"code":"var _jsxFileName = \"/Users/hyungseokkim/Documents/movie_app/src/routes/Home.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Movie from '../components/Moive';\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isloading: true,\n      movie: []\n    };\n\n    this.getMovies = async () => {\n      const _ref = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"),\n            movies = _ref.data.data.movies;\n\n      this.setState({\n        movies,\n        isloading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const _this$state = this.state,\n          isloading = _this$state.isloading,\n          movies = _this$state.movies;\n    return React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, isloading ? React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"loader__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Loading...\")) : React.createElement(\"div\", {\n      className: \"movies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, movies.map(movie => React.createElement(Movie, {\n      key: movie.id,\n      id: movie.id,\n      title: movie.title,\n      year: movie.year,\n      summary: movie.summary,\n      poster: movie.medium_cover_image,\n      genres: movie.genres,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hyungseokkim/Documents/movie_app/src/routes/Home.js"],"names":["React","axios","Movie","Home","Component","state","isloading","movie","getMovies","get","movies","data","setState","componentDidMount","render","map","id","title","year","summary","medium_cover_image","genres","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAFuB;;AAAA,SAM/BC,SAN+B,GAMnB,YAAY;AAAA,mBACmB,MAAMP,KAAK,CAACQ,GAAN,CAAU,0DAAV,CADzB;AAAA,YACIC,MADJ,QACZC,IADY,CACJA,IADI,CACID,MADJ;;AAEpB,WAAKE,QAAL,CAAc;AAAEF,QAAAA,MAAF;AAAUJ,QAAAA,SAAS,EAAE;AAArB,OAAd;AACH,KAT8B;AAAA;;AAW/BO,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,SAAL;AAEH;;AAEDM,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKT,KAD9B;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcI,MADd,eACcA,MADd;AAEL,WAAO;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACFJ,SAAS,GACN;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADM,GAKF;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKI,MAAM,CAACK,GAAP,CAAWR,KAAK,IACb,oBAAE,KAAF;AAAQ,MAAA,GAAG,EAAEA,KAAK,CAACS,EAAnB;AACI,MAAA,EAAE,EAAET,KAAK,CAACS,EADd;AAEI,MAAA,KAAK,EAAET,KAAK,CAACU,KAFjB;AAGI,MAAA,IAAI,EAAEV,KAAK,CAACW,IAHhB;AAII,MAAA,OAAO,EAAEX,KAAK,CAACY,OAJnB;AAKI,MAAA,MAAM,EAAEZ,KAAK,CAACa,kBALlB;AAMI,MAAA,MAAM,EAAEb,KAAK,CAACc,MANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CANL,CAAP;AAoBH;;AAtC8B;;AAyCnC,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Movie from '../components/Moive';\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n\n    state = {\n        isloading: true,\n        movie: []\n    };\n    getMovies = async () => {\n        const { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n        this.setState({ movies, isloading: false });\n    }\n\n    componentDidMount() {\n        this.getMovies();\n\n    }\n\n    render() {\n        const { isloading, movies } = this.state;\n        return <section className=\"container\">\n            {isloading ?\n                <div className=\"loader\">\n                    <span className=\"loader__text\">Loading...</span>\n                </div>\n                : (\n                    <div className=\"movies\">\n                        {movies.map(movie => (\n                            < Movie key={movie.id}\n                                id={movie.id}\n                                title={movie.title}\n                                year={movie.year}\n                                summary={movie.summary}\n                                poster={movie.medium_cover_image}\n                                genres={movie.genres}\n                            />\n                        ))}\n                    </div>\n                )}\n        </section>;\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}