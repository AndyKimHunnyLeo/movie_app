{"ast":null,"code":"var _jsxFileName = \"/Users/hyungseokkim/Documents/movie_app/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Movie from './Moive';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isloading: true,\n      movie: []\n    };\n\n    this.getMovies = async () => {\n      const _ref = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"),\n            movies = _ref.data.data.movies;\n\n      this.setState({\n        movies,\n        isloading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const _this$state = this.state,\n          isloading = _this$state.isloading,\n          movies = _this$state.movies;\n    return React.createElement(\"section\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, isloading ? React.createElement(\"div\", {\n      class: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"loader__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Loading...\")) : React.createElement(\"div\", {\n      class: \"movies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, movies.map(movie => React.createElement(Movie, {\n      key: movie.id,\n      id: movie.id,\n      title: movie.title,\n      year: movie.year,\n      summary: movie.summary,\n      poster: movie.medium_cover_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hyungseokkim/Documents/movie_app/src/App.js"],"names":["React","axios","Movie","App","Component","state","isloading","movie","getMovies","get","movies","data","setState","componentDidMount","render","map","id","title","year","summary","medium_cover_image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,KAAK,EAAE;AAFD,KAFwB;;AAAA,SAMhCC,SANgC,GAMpB,YAAY;AAAA,mBACiB,MAAMP,KAAK,CAACQ,GAAN,CAAU,0DAAV,CADvB;AAAA,YACEC,MADF,QACdC,IADc,CACNA,IADM,CACED,MADF;;AAEtB,WAAKE,QAAL,CAAc;AAAEF,QAAAA,MAAF;AAAUJ,QAAAA,SAAS,EAAE;AAArB,OAAd;AACD,KAT+B;AAAA;;AAWhCO,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,SAAL;AAED;;AAEDM,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKT,KAD5B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYI,MADZ,eACYA,MADZ;AAEP,WAAO;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJJ,SAAS,GACR;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADQ,GAKN;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,MAAM,CAACK,GAAP,CAAWR,KAAK,IACf,oBAAE,KAAF;AAAQ,MAAA,GAAG,EAAEA,KAAK,CAACS,EAAnB;AACE,MAAA,EAAE,EAAET,KAAK,CAACS,EADZ;AAEE,MAAA,KAAK,EAAET,KAAK,CAACU,KAFf;AAGE,MAAA,IAAI,EAAEV,KAAK,CAACW,IAHd;AAIE,MAAA,OAAO,EAAEX,KAAK,CAACY,OAJjB;AAKE,MAAA,MAAM,EAAEZ,KAAK,CAACa,kBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CANC,CAAP;AAmBD;;AArC+B;;AAwClC,eAAejB,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Movie from './Moive';\n\nclass App extends React.Component {\n\n  state = {\n    isloading: true,\n    movie: []\n  };\n  getMovies = async () => {\n    const { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isloading: false });\n  }\n\n  componentDidMount() {\n    this.getMovies();\n\n  }\n\n  render() {\n    const { isloading, movies } = this.state;\n    return <section class=\"container\">\n      {isloading ?\n        <div class=\"loader\">\n          <span class=\"loader__text\">Loading...</span>\n        </div>\n        : (\n          <div class=\"movies\">\n            {movies.map(movie => (\n              < Movie key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                year={movie.year}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n              />\n            ))}\n          </div>\n        )}\n    </section>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}